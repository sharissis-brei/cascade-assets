## Formerly LeftNav_Velocity. Can be used with index and non-index pages.
## New left nav format that works without a block

#macro ( setVars )
    ## Parent depends on whether page is an index or not
    #set ( $isIndex = $currentPage.name == 'index' )
    #if ( $isIndex )
        #set ( $parent = $currentPage.parentFolder )
        #set ( $parentDir = $parent.parentFolder )     
    #else
        #set ( $parentDir = $currentPage.parentFolder )
    #end
#end

## Builds left navigation
#macro ( buildLeftNav )
    ## Data
    #set ( $siblings = $parentDir.children )
    
    ## Output
    #buildLeftNavTitle()
    #buildLeftNavMenu($siblings)
#end

## Builds the header for the left nav
#macro ( buildLeftNavTitle )
    ## Data
    #if ( $parentDir.path == "/" )
        ## For folders under the root, the index doesn't need another forward slash
        #set ( $folderIndexPage = $_.locatePage("${parentDir.path}index" ) )
        #set ( $titleLink = $folderIndexPage.link )
        ## This $title variable should be $folderIndexPage.label, but for the home page
        ## that label is way too long.
        #set ( $leftNavTitle = "Chapman University" )
    #else
        #set ( $folderIndexPage = $_.locatePage("${parentDir.path}/index" ) )
        #set ( $titleLink = $folderIndexPage.link )
        #set ( $leftNavTitle = ${_EscapeTool.xml($folderIndexPage.label)} )
    #end
    
    ## Output
    <div class="leftTitle">
        <ul>
            <li class="title">
                <a href="${titleLink}" target="_top" title="${leftNavTitle}" >
                    ${leftNavTitle}
                </a>
            </li>
        </ul>
    </div>
#end

## Builds menu in the left nav
#macro ( buildLeftNavMenu $siblings )
    <ul>
    #foreach ( $sibling in $siblings )
        #set ( $isVisible = $sibling.metadata.getDynamicField('Hide from navigation').value != "Yes" )

        ## Sibling is a single page
        #if ( $sibling.assetType == 'page' && $isVisible && ($sibling.name != 'index') )
            #buildSiblingPageListItem($sibling)

        ## Sibling is a folder
        #elseif ( $sibling.assetType == 'folder' && $isVisible && $sibling.name != '_files' )
            #set ( $indexPage = $_.locatePage("${sibling.path}/index") )
            ## This makes sure the previous line returned the expected page
            #set ( $indexPageExists = ( $indexPage.path == "${sibling.path}/index" ) )
            #set ( $visibleIndex = $indexPageExists && ($indexPage.metadata.getDynamicField('Hide from navigation').value != "Yes") )
            
            ## Only if the index page is also visible
            #if ( $visibleIndex )
                #buildSiblingFolderListItem($sibling $indexPage)
            #end
        #end
    #end
    </ul>
#end

## Builds a basic page list item that has no dropdown (no children) in the left nav
#macro ( buildSiblingPageListItem $siblingPage )
    ## Data
    #set ( $siblingPageTitle = ${_EscapeTool.xml($siblingPage.label)} )
    #if ( $siblingPage.path == $currentPage.path )
        #set ( $liClass = "active" )
    #else
        #set ( $liClass = "unstyled-inactive" )
    #end
    
    ## Output
    <li class="${liClass}">
        <a href="${siblingPage.link}" title="${siblingPageTitle}">$siblingPageTitle</a>
    </li>
#end

## Sets up the folder list items in the left nav
#macro ( buildSiblingFolderListItem $siblingFolder $indexPage )
    ## Data
    ## For folders, the title displayed is the display name of its index page
    #set ( $siblingFolderTitle = ${_EscapeTool.xml($indexPage.label)} )
    #set ( $visibleChildAssets = [] )

    ## Get all children assets that aren't hidden
    #foreach ( $asset in $siblingFolder.children )
        ## By default, set visibility to false
        #set ( $isVisibleChild = false )
        #if ( $asset.assetType == 'folder' && $asset.name != '_files' )
            #set ( $folderVisible = $asset.metadata.getDynamicField('Hide from navigation').value != "Yes" )
            #set ( $folderIndexPage = $_.locatePage("${asset.path}/index" ) )
            ## This makes sure the previous line returned the expected index page
            #set ( $folderIndexExists = ( $folderIndexPage.path == "${asset.path}/index" ) )
            #set ( $folderIndexVisible = $folderIndexExists && ($folderIndexPage.metadata.getDynamicField('Hide from navigation').value != "Yes") )
            
            ## Both the folder and index page must be visible
            #if ( $folderIndexVisible && $folderVisible )
                #set ( $isVisibleChild = true )
            #end
        #elseif ( $asset.assetType == 'page' && ($asset.name != 'index') )
            #set ( $isVisibleChild = $asset.metadata.getDynamicField('Hide from navigation').value != "Yes" )
        #end
        
        #if ( $isVisibleChild )
            #set ( $discard = $visibleChildAssets.add($asset) )
        #end
    #end
    
    ## Output
    #if ( $indexPage.path == $currentPage.path )
        <li class="active">
    #else
        <li>
    #end
    
    #if ( $visibleChildAssets.size() > 0 )
        <a href="${indexPage.link}">
            $siblingFolderTitle
            <span class="plus">+</span>
        </a>
        <ul class="leftNav-sub">
            #foreach ( $asset in $visibleChildAssets )
                #buildChildListItem($asset)
            #end
        </ul>
        </li>
    ## If it has no other children, it basically just looks like a page does in the left nav
    #else
        <a href="${indexPage.link}">
            $siblingFolderTitle
        </a>
        </li>
    #end
#end

## Sets up the children of a sibling, submenus in the left nav
#macro ( buildChildListItem $child )
    ## Data
    #set ( $childTitle = ${_EscapeTool.xml($child.label)} )
    #if ( $child.assetType == 'page' )
        #set ( $childLink = "${child.link}" )
    #elseif ( $child.assetType == 'folder' )
        #set ( $childLink = "${child.link}/index" )
    #end
    
    ## Output
    <li>
        <a href="${childLink}" title="${childTitle}">
            <span class="bullet">Â» </span>
            $childTitle
        </a>
    </li>
#end

##
## MAIN
##
#setVars()
#buildLeftNav()